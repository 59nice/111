<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[Linux 使用小结]]></title>
    <url>%2F2018%2F09%2F19%2FLinux%20%E4%BD%BF%E7%94%A8%E5%B0%8F%E7%BB%93%2F</url>
    <content type="text"><![CDATA[Linux 介绍 Linux是一套免费使用和自由传播的类Unix操作系统，是一个基于POSIX和UNIX的多用户、多任务、支持多线程和多CPU的操作系统。它能运行主要的UNIX工具软件、应用程序和网络协议。它支持32位和64位硬件。Linux继承了Unix以网络为核心的设计思想，是一个性能稳定的多用户网络操作系统。 Linux如何切换到root用户 (1)sudo 命令这样输入当前管理员用户密码就可以得到超级用户的权限。但默认的情况下5分钟root权限就失效了。 (2)sudo -i通过这种方法输入当前管理员用户的密码就可以进到root用户。 (3)如果想一直使用root权限，要通过su切换到root用户。那我们首先要重设置root用户的密码：sudo passwd root这样就可以设置root用户的密码了。之后就可以自由的切换到root用户了su输入root用户的密码即可。 vi/vim 光标移动命令移动光标上:k nk:向上移动n行 9999k或gg可以移到第一行 G移到最后一行下:j nj:向下移动n行左:h nh:向左移动n列右:l nl:向右移动n列 w：光标以单词向前移动 nw：光标向前移动n个单词 光标到单词的第一个字母上b：与w相反e: 光标以单词向前移动 ne：光标向前移动n个单词 光标到单词的最后一个字母上ge:与e相反 $:移动光标到行尾 n$:移动到第n行的行尾0（Num）：移动光标到行首^:移动光标到行首第一个非空字符上去 f:移动光标到当前行的字符a上，nf移动光标到当前行的第n个a字符上F:相反 %:移动到与制匹配的括号上去（），{}，[]，&lt;&gt;等。 nG:移动到第n行上 G:到最后一行 CTRL＋G 得到当前光标在文件中的位置 向前翻页：CTRL+F向下移动半屏：CTRL＋G 向后翻页：CTRL+B 到文件开头 gg到文件结尾 shift+g 存盘:q! :不存盘退出:e! :放弃修改文件内容，重新载入该文件编辑:wq ：存盘退出 dw：删除一个单词,需将光标移到单词的第一个字母上，按dw，如果光标在单词任意位置，用dawdnw:删除n个单词dne:也可，只是删除到单词尾dnl:向右删除n个字母dnh:向左删除n个字母dnj:向下删除n行dnk:向上删除n行d$：删除当前光标到改行的行尾的字母dd：删除一行cnw[word]:将n个word改变为wordcc:改变整行C$:改变到行尾 J: 删除换行符，将光标移到改行，按shift+j删除行尾的换行符，下一行接上来了.u: 撤销前一次的操作shif+u(U):撤销对该行的所有操作。 :set showmode :设置显示工作模式 o：在当前行的下面另起一行O（shift+o)：在当前行的上面另起一行 nk或nj：光标向上或向下移n行，n为数字an!【ESC】：在行后面加n个感叹号(!)nx:执行n次x(删除)操作 ZZ：保存当前文档并退出VIM :help ：查看帮助文档，在这之中，按CTRL+] 进入超连接，按CTRL＋O 返回。:help subject :看某一主题的帮助，ZZ 退出帮助 :set number / set nonumber :显示/不显示行号:set ruler /set noruler:显示/不显示标尺 /pattern 正方向搜索一个字符模式?pattern 反方向搜索一个字符模式然后按n 继续向下找 把光标放到某个单词上面，然后按×号键，表示查找这个单词查找整个单词：/\ :set hlsearch 高亮显示查找到的单词:set nohlsearch 关闭改功能 m[a-z]:在文中做标记，标记号可为a-z的26个字母，用`a可以移动到标记a处 r:替换当前字符nr字符：替换当前n个字符 查找替换way1:/【word】 :查找某个wordcw【newword】:替换为新wordn: 继续查找.: 执行替换 way2::s/string1/string2/g:在一行中将string1替换为string2,g表示执行 用c表示需要确认:num1,num2 s/string1/string2/g:在行num1至num2中间将string1替换为string2:1,$ s/string1/string2/g:在全文中将string1替换为string2 v:进入visual 模式【ESC】退出V:shift+v 进入行的visual 模式CTRL+V:进如块操作模式用o和O改变选择的边的大小。 粘贴：p，这是粘贴用x或d删除的文本复制：ynw：复制n个单词yy：复制一行ynl:复制n个字符y$:复制当前光标至行尾处nyy:拷贝n行完了用p粘贴 :split:分割一个窗口:split file.c ：为另一个文件file.c分隔窗口:nsplit file.c: 为另一个文件file.c分隔窗口，并指定其行数CTRL＋W在窗口中切换:close：关闭当前窗口 在所有行插入相同的内容如include&lt;，操作方法如下：将光标移到开始插入的位置，按CTRL+V进入VISUAL模式，选择好模块后按I（shift+i)，后插入要插入的文本，按[ESC]完成。 :read file.c 将文件file.c的内容插入到当前光标所在的下面:0read file.c 将文件file.c的内容插入到当前文件的开始处(第0行）:nread file.c 将文件file.c的内容插入到当前文件的第n行后面:read !cmd :将外部命令cmd的输出插如到当前光标所在的下面 :n1,n2 write temp.c 将本文件中的n1,到n2行写入temp.c这个文件中去 CTRL＋L刷新屏幕shift + &lt; 左移一行shift + &gt; 右移一行 u: undoCTRL+R: re-doJ: 合并一行CTRL+p 自动完成功能CTRL+g 查看当前文件全路径 q[a-z] 开始记录但前开始的操作为宏，名称可为【a-z】，然后用q终止录制宏。用reg显示当前定义的所有的宏，用@[a-z]来在当前光标处执行宏[a-z]。]]></content>
      <categories>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>Linux</tag>
        <tag>笔记</tag>
        <tag>经验</tag>
        <tag>运维</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Oracle数据库查看和解决死锁]]></title>
    <url>%2F2018%2F04%2F20%2FOracle%E6%95%B0%E6%8D%AE%E5%BA%93%E6%9F%A5%E7%9C%8B%E5%92%8C%E8%A7%A3%E5%86%B3%E6%AD%BB%E9%94%81%2F</url>
    <content type="text"><![CDATA[死锁的概念 所谓死锁，是指两个会话，每个会话都持有另外一个会话想要的资源，因争夺资源而造成的一种互相等待的现象，此时就会出现死锁，若无外力作用，它们都将无法推进下去。此时称系统处于死锁状态或系统产生了死锁，这些永远在互相等待的进程称为死锁进程。Oracle对于“死锁”采取的策略是回滚其中一个事务，让另外一个事务顺利进行。 查看死锁12345678910SELECT SESS.SID, SESS.SERIAL#, LO.ORACLE_USERNAME, LO.OS_USER_NAME, AO.OBJECT_NAME, LO.LOCKED_MODE, SESS.MACHINE FROM V$LOCKED_OBJECT LO, DBA_OBJECTS AO, V$SESSION SESS WHERE AO.OBJECT_ID = LO.OBJECT_ID AND LO.SESSION_ID = SESS.SID; ORACLE里锁有以下几种模式: 0：none 1：null 空 2：Row-S 行共享(RS)：共享表锁，sub share 3：Row-X 行独占(RX)：用于行的修改，sub exclusive 4：Share 共享锁(S)：阻止其他DML操作，share 5：S/Row-X 共享行独占(SRX)：阻止其他事务操作，share/sub exclusive 6：exclusive 独占(X)：独立访问使用，exclusive 数字越大锁级别越高, 影响的操作越多。 1级锁有：Select，有时会在v$locked_object出现。 2级锁有：Select for update,Lock For Update,Lock Row Shareselect for update当对话使用for update子串打开一个游标时，所有返回集中的数据行都将处于行级(Row-X)独占式锁定，其他对象只能查询这些数据行，不能进行update、delete或select for update操作。 3级锁有：Insert, Update, Delete, Lock Row Exclusive没有commit之前插入同样的一条记录会没有反应, 因为后一个3的锁会一直等待上一个3的锁, 我们必须释放掉上一个才能继续工作。 4级锁有：Create Index, Lock Sharelocked_mode为2,3,4不影响DML(insert,delete,update,select)操作, 但DDL(alter,drop等)操作会提示ora-00054错误。00054, 00000, “resource busy and acquire with NOWAIT specified”// Cause: Resource interested is busy.// Action: Retry if necessary. 5级锁有：Lock Share Row Exclusive具体来讲有主外键约束时update / delete … ; 可能会产生4,5的锁。 6级锁有：Alter table, Drop table, Drop Index, Truncate table, Lock Exclusive 解决死锁1ALTER SYSTEM KILL SESSION '前SQL语句的SID','前SQL语句的SERIAL#']]></content>
      <categories>
        <category>数据库</category>
      </categories>
      <tags>
        <tag>Oracle</tag>
        <tag>ORACLE</tag>
        <tag>死锁</tag>
        <tag>解决死锁</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Hello World]]></title>
    <url>%2F2018%2F04%2F20%2Fhello-world%2F</url>
    <content type="text"><![CDATA[博客第一篇：Hello World祭天 为什么称第一个程序为“Hello Wolrd”呢？其实计算机行业里面，学习任何技术的第一个程序都可以称为“Hello World”。“Hello World”的字面意思是“你好，世界”，也就是跟世界打招呼。我们第一个程序在这世界上诞生了，那肯定要跟世界打声招呼嘛，所以就称为“Hello World”。 Java12345public class HelloWorld &#123; public static void main(String[] args) &#123; System.out.println("Hello World!"); &#125;&#125; Oracle12345CREATE OR REPLACE PROCEDURE proc_helloworldISBEGIN DBMS_OUTPUT.put_line ('Hello World!');END; javascript12345&lt;script type="text/javascript"&gt; alert("Hello World!"); document.write("Hello World!"); console.log("Hello World!");&lt;/script&gt;]]></content>
  </entry>
</search>
